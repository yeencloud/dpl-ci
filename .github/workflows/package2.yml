# yeencloud/dpl-ci/.github/workflows/package.yml
name: Build, Version, and Publish Service

on:
  workflow_call:
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: true
      GITHUB_TOKEN:
        required: true

jobs:
  bump-version:
    name: Bump Version
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump.outputs.new_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine current version
        id: get_version
        run: |
          if [ -f VERSION ]; then
            version=$(cat VERSION)
          else
            version=$(git describe --tags --abbrev=0 2>/dev/null | sed 's/^v//')
            if [ -z "$version" ]; then
              version="0.0.0"
            fi
          fi
          echo "Current version: $version"
          echo "::set-output name=current_version::$version"

      - name: Bump version (increment patch)
        id: bump
        run: |
          version=${{ steps.get_version.outputs.current_version }}
          IFS='.' read -r major minor patch <<< "$version"
          new_patch=$((patch + 1))
          new_version="${major}.${minor}.${new_patch}"
          echo "$new_version" > VERSION
          echo "New version: $new_version"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add VERSION
          git commit -m "chore: bump version to $new_version"
          git tag "v$new_version"
          git push origin HEAD --follow-tags
          echo "::set-output name=new_version::$new_version"

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run tests
        run: |
          # Replace with your actual testing command(s)
          make test

  build-and-publish:
    name: Build and Publish Docker Image
    needs: [ bump-version, test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Build and push Docker image
        run: |
          NEW_VERSION="${{ needs.bump-version.outputs.new_version }}"
          IMAGE="ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}"
          docker build \
            --build-arg APP_VERSION=${NEW_VERSION} \
            -t ${IMAGE}:${NEW_VERSION} \
            -t ${IMAGE}:latest \
            .
          docker push ${IMAGE}:${NEW_VERSION}
          docker push ${IMAGE}:latest

  create-release:
    name: Create GitHub Release
    needs: bump-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ needs.bump-version.outputs.new_version }}"
          release_name: "Release v${{ needs.bump-version.outputs.new_version }}"
          body: "Release of version ${{ needs.bump-version.outputs.new_version }}"
          draft: false
          prerelease: false
